@model List<Seller>
@{
    Seller firstSeller = null;
    if (Model != null && Model.Count > 0)
    {
        firstSeller = Model[0];
    }

    ViewBag.Title = "Build Menu";
    ViewBag.PageDesc = "Create your menu by adding sections and products under. You can use the pen icon to rename the sections and products.";
}

<h2>Menu of: @firstSeller.SellerName</h2>

<hr />

<div class="row">
    <div class="col-md-6">
        <div class="main-card mb-3 card">
            <div class="card-body" style="min-height:300px">
                <div id="no-content"></div>
                <div class="list-container">
                    <div class="list" data-count="0">
                        <div class="item disabled">
                            <button class="btn btn-outline-success btn-sm pull-right" id="add-section">New Section <em class="fa fa-plus"></em></button>
                            <button class="btn btn-success btn-sm" id="btn-save" data-toggle="modal" data-target="#saveSuccess">Save Menu <em class="fa fa-check"></em></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="main-card mb-3 card">
            <div class="card-body bg-danger">
                <div class="trash-container">
                    <div class="trash-list" data-count="0">
                        <div class="trash-item disabled text-white text-center">
                            Just drop the sections you want to delete to here!
                            <br />
                            <br />
                        </div>
                        <div class="trash-item disabled">
                            <button class="btn btn-danger btn-block pull-right" id="clear-trash">Clear Trash <em class="fa fa-recycle"></em></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modals -->
@section modals{
    <div id="modal-container">

        <div class="modal fade" id="saveSuccess" tabindex="-1" role="dialog" aria-labelledby="saveSuccess" aria-hidden="true">
            <div class="modal-dialog modal-sm" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Menu Saved!</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body m-auto">
                        <em class="fa fa-check-circle fa-5x text-success" data-dismiss="modal" aria-label="Close"></em>
                    </div>
                </div>
            </div>
        </div>

    </div>
}

@section scripts{
    <script src="~/Content/src/assets/scripts/jquery-3.5.1.min.js"></script>
    <script src="~/Content/src/assets/scripts/html5sortable.js"></script>
    <script>
        var restData = @Html.Raw(firstSeller.SellerJSON);

        var generateSection = function (sectionName, sectionNo, oldStamp, oldSubItemCount) {
            sectionNo++;
            var sectionStamp = "section" + sectionNo;
            var subItemCount = 0;
            if (oldStamp) sectionStamp = oldStamp;
            if (oldSubItemCount) subItemCount = oldSubItemCount;
            var $sectionTemp = $(`
                        <div class="item" data-sectionstamp="`+ sectionStamp + `">
                            <div class="section-header-bottomline h4" style="border-bottom-color:`+ restData.accentColor + `;" data-toggle="collapse" href="#` + sectionStamp + `" aria-expanded="false">
                                <em class="pe-7s-pen text-sm-left edit-section"></em>
                                <label class="section-name">`+ sectionName + `</label>
                                <em class="pe-7s-angle-right pull-right section-icon" style="color:`+ restData.accentColor + `"></em>
                            </div>
                            <div class="sublist collapse" id="`+ sectionStamp + `" data-count="` + subItemCount +`">
                                <div class="subitem disabled">
                                    <button class="btn btn-outline-success btn-sm pull-right btn-newitem">New Item <em class="fa fa-plus"></em></button>
                                </div>
                            </div>
                        </div>`);


            $sectionTemp.find(".sublist").append($brNonItem);
            $sectionTemp.append($brNonItem);

            return $sectionTemp;
        };

        var generateItem = function (sectionNo, itemNo, oldStamp, oldName) {
            var stamp = `section` + sectionNo + `item` + itemNo;
            var itemName = "New Product";
            if (oldStamp) stamp = oldStamp;
            if (oldName) itemName = oldName;
            $itemTemp = $(`
                        <div class="subitem `+ stamp + `" data-stamp="` + stamp + `">
                            <h5 class="list-group-item-heading">
                                <em class="pe-7s-trash pull-right remove-item text-danger fa-fw `+ stamp + `"data-toggle="modal" data-target="#alert` + stamp + `"></em>
                                <label class="list-itemname">` + itemName + `</label>
                                <em class="pe-7s-edit pull-right fa-fw `+ stamp + `" style="color:#FF5733;" data-toggle="modal" data-target="#` + stamp + `"></em>
                            </h5>
                        </div>
                        `);
            return $itemTemp;
        };

        var $brNonItem = "<br class='disabled' />";

        var bind = function () {
            bindItems();
            $("#add-section").off("click").on("click", addSection);
            $("#clear-trash").off("click").on("click", function () {
                $(".trash-list").find(".item").remove();
            });

            $("#btn-save").off("click.save").on("click.save", saveMenu);
        };

        var bindItems = function () {
            $(".section-header-bottomline").off("click.toggleChevron").on("click.toggleChevron", function () {
                $(this).find("em.section-icon").toggleClass("pe-7s-angle-right").toggleClass("pe-7s-angle-down");
            });

            $(".edit-section").off("click.editsection").on("click.editsection", function () {
                event.stopPropagation();
                $(this).toggleClass("text-appcolor");
                var editableState = $(this).next().attr("contenteditable");
                if (editableState == "true")
                    $(this).next().attr("contenteditable", false);
                else
                    $(this).next().attr("contenteditable", true);

                $(this).next().focus();
            });

            $("label.section-name").off('keypress.editsection').on('keypress.editsection', function (e) {
                if (e.which == 13) {
                    $(this).prev().click();
                }
            });

            $("label.item-name").off('keypress.editsection').on('keypress.editsection', function (e) {
                if (e.which == 13) {
                    $(this).prev().click();
                }
            });

            $(".btn-newitem").off("click.newitem").on("click.newitem", addItem);

            $(".btn-save-product").off("click.saveproduct").on("click.saveproduct", saveProduct);
            $(".btn-remove-product").off("click.deleteproduct").on("click.deleteproduct", deleteProduct);
            $("input[type=file]").off("change").on("change", uploadFile);

            $(".rlabel").find("em").off("click.clearFile").on("click.clearFile", clearUploadedFile);

            sortable('.list', {
                items: ':not(.disabled)',
                forcePlaceholderSize: true,
                placeholderClass: 'ph-class',
                acceptFrom: '.list, .trash-list',
            });
            sortable('.sublist', {
                items: ':not(.disabled)',
                forcePlaceholderSize: true,
                placeholderClass: 'ph-sub-class',
                //acceptFrom: '.trash-sublist'
            });

            sortable('.trash-list', {
                items: ':not(.disabled)',
                forcePlaceholderSize: true,
                placeholderClass: 'ph-class',
                acceptFrom: '.list'
            });
        };

        var addSection = function () {
            var sectionCount = $(".list").attr("data-count");
            var $newSection = generateSection("New Section", sectionCount);
            $newSection.insertBefore($(this).parent());
            $newSection.find(".btn-newitem").off("click.newitem").on("click.newitem", addItem).click();
            sectionCount++;
            $(".list").attr("data-count", sectionCount);
            toggleNoContent();
            $("#no-content").html("");
            bindItems();
        };

        var toggleNoContent = function () {
            var $nocontent = `
                <div class="row" style="color:#EAEAEA; margin:50px">
                    <div class="col-md-12 text-center">
                        <em class="fa fa-leaf fa-6x"></em>
                    </div>
                    <br />
                    <div class="col-md-12 text-center">
                        <h4>There is no sections here.</h4>
                    </div>
                    <div class="col-md-12 text-center">
                        <p>
                            Please start by adding sections from the button below.
                        </p>
                    </div>
                </div>
            `;

            var $noContentContainer = $("#no-content");
            if ($noContentContainer.html() == "") {
                $noContentContainer.append($nocontent);
            } else {
                $noContentContainer.html("");
            }
        };

        var addItem = function () {
            var sectionNo = $(this).parent().parent().prev().attr("href").split("#section")[1];
            var itemNo = $(this).parent().parent().attr("data-count");
            var $newItem = generateItem(sectionNo, itemNo);
            $newItem.insertBefore($(this).parent());

            var $newModal = generateModal(sectionNo, itemNo);
            $("#modal-container").append($newModal);

            itemNo++;
            $(this).parent().parent().attr("data-count", itemNo);

            bindItems();
        };

        var saveProduct = function () {
            var itemName = $(this).parent().parent().find("label.item-name").text();
            var stamp = $(this).attr("data-stamp");
            //var sectionNo = stamp.split("section")[1].split("item")[0];
            //var itemNo = stamp.split("item")[1];
            $("em." + stamp).prev().text(itemName);
            $(this).prev().click();
        };

        var deleteProduct = function () {
            var stamp = $(this).attr("data-stamp").split("alert")[1];
            $("div." + stamp).remove();
            bindItems();
            $(this).prev().click();
        };

        var generateModal = function (sectionNo, itemNo, oldStamp) {
            var stamp = `section` + sectionNo + `item` + itemNo;
            if (oldStamp) stamp = oldStamp;
            var $modalTemp = `
                                        <div class="modal fade `+ stamp + `" id="` + stamp + `" tabindex="-1" role="dialog" aria-labelledby="` + stamp + `" aria-hidden="true">
                                            <div class="modal-dialog" role="document">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <div class="h5 modal-title">
                                                            <em class="pe-7s-pen text-sm-left edit-section"></em>
                                                            <label class="item-name">New Product</label>
                                                        </div>
                                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                            <span aria-hidden="true">&times;</span>
                                                        </button>
                                                    </div>
                                                    <div class="modal-body">

                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <div class="input-group">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text">Price</span>
                                                                </div>
                                                                <input placeholder="25₺..." type="text" class="form-control price `+ stamp + `">
                                                            </div>
                                                        </div>
                                                        <br  />
                                                        <br  />
                                                        <br  />
                                                        <div class="col-md-12">
                                                            <div class="input-group">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text">Description</span>
                                                                </div>
                                                                <textarea class="form-control description `+ stamp + `" placeholder="description..."></textarea>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <br />
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <div class="input-group">
                                                                <div class="input-group-prepend">
                                                                    <span class="` + stamp + ` input-group-text plabel">Product Image</span>
                                                                    <span class="` + stamp + ` input-group-text d-none rlabel"><em data-stamp="` + stamp + `" class="fa fa-times fa-fw text-danger"></em></span>
                                                                    <span class="` + stamp + ` input-group-text d-none llabel"><em class="` + stamp + ` fa fa-spin fa-fw fa-spin text-primary"></em></span>
                                                                </div>
                                                                <div class="custom-file">
                                                                    <form id="form`+ stamp + `" method="post" enctype="multipart/form-data">
                                                                        <input type="file" class="custom-file-input" id="inputGroupFile01"
                                                                               aria-describedby="inputGroupFileAddon01" data-stamp="` + stamp + `">
                                                                        <label class="`+ stamp + ` custom-file-label" for="inputGroupFile01">Choose file</label>
                                                                        <input type="hidden" class="url `+ stamp + `" />
                                                                    </form>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    </div>
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                        <button type="button" class="btn btn-primary btn-save-product" data-stamp="`+ stamp + `">Save changes</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="modal fade `+ stamp + `" id="alert` + stamp + `" tabindex="-1" role="dialog" aria-labelledby="alert` + stamp + `" aria-hidden="true">
                                            <div class="modal-dialog" role="document">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <div class="h5 modal-title">
                                                            <label class="item-name">Warning!</label>
                                                        </div>
                                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                            <span aria-hidden="true">&times;</span>
                                                        </button>
                                                    </div>
                                                    <div class="modal-body">
                                                        You are about the delete this item. Are you sure?
                                                    </div>
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                        <button type="button" class="btn btn-primary btn-remove-product" data-stamp="alert`+ stamp + `">Delete Item</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        `;

            return $modalTemp;
        };

        var uploadFile = function () {
            var fileName = $(this).val().split("\\");
            fileName = fileName[fileName.length - 1];
            $(this).next().text(fileName);

            var file = $(this)[0].files[0];
            var fileData = new FormData();
            fileData.append(file.name, file);

            var stamp = $(this).attr("data-stamp");
            var $productLabel = $("." + stamp + ".plabel");
            var $loadingLabel = $("." + stamp + ".llabel");
            var $removeLabel = $("." + stamp + ".rlabel");
            var $inputLabel = $("." + stamp + ".custom-file-label");

            $productLabel.addClass("d-none");
            $loadingLabel.removeClass("d-none");

            $.ajax({
                url: '/Home/UploadFile',
                type: "POST",
                contentType: false, // Not to set any content header
                processData: false, // Not to process data
                data: fileData,
                success: function (result) {
                    if (result.Status) {
                        $inputLabel.text(fileName);
                        $loadingLabel.addClass("d-none");
                        $removeLabel.removeClass("d-none");
                        $(".url." + stamp).val(result.Result.url);
                    } else {
                        $loadingLabel.addClass("d-none");
                        $removeLabel.addClass("d-none");
                        $productLabel.removeClass("d-none");
                        $productLabel.text(result.Message);
                    }
                },
                error: function (err) {
                    toggleLoading();
                }
            });

        };

        var render = function () {
            //console.log(restData);
            if (restData.menus && restData.menus.length > 0) {
                var sectionCount = restData.menus[restData.menus.length - 1].stamp.split("section")[1];
                $(".list").attr("data-count", sectionCount);

                for (var i = 0; i < restData.menus.length; i++) {
                    var menu = restData.menus[i];

                    var itemCount = 0;

                    if (menu.data && menu.data.length > 0) {
                        itemCount = menu.data[menu.data.length - 1].stamp.split("item")[1];
                        itemCount++;
                    }

                    //console.log(menu);
                    var $section = generateSection(menu.title, 0, menu.stamp, itemCount);
                    //console.log($section);

                    
                    //$("#" + menu.stamp).attr("data-count", itemCount);

                    if (menu.data && menu.data.length > 0) {
                        for (var j = 0; j < menu.data.length; j++) {
                            var product = menu.data[j];
                            console.log(product);

                            $product = $(generateItem(0, 0, product.stamp));
                            $product.find("label.list-itemname").text(product.productName);

                            $modal = $(generateModal(0, 9, product.stamp));
                            $modal.find("label.item-name").text(product.productName);
                            $modal.find("input.price").val(product.price);
                            $modal.find("textarea.description").val(product.description);
                            $modal.find("input.url").val(product.imageUrl);

                            var url = product.imageUrl.split("/");
                            url = url[url.length - 1];
                            $modal.find("label.custom-file-label").text(url);
                            $modal.find("span.plabel").addClass("d-none");
                            $modal.find("span.rlabel").removeClass("d-none");


                            $product.insertBefore($section.find(".btn-newitem").parent());
                            $("#modal-container").append($modal);
                        }
                    }
                    
                    $section.insertBefore($("#add-section").parent());
                }

                bindItems();

            } else {
                toggleNoContent();
            }

            bind();
        };

        var saveMenu = function () {
            var menuArray = [];
            var $menus = $(".list > .item:not(.disabled)");

            $menus.each(function (menuIndex) {
                $menu = $($menus[menuIndex]);
                var menuStamp = $menu.attr("data-sectionstamp");

                var menuData = {};
                menuData.title = $menu.find(".section-name").text();
                menuData.stamp = menuStamp;
                menuData.data = [];

                var $products = $menu.find(".sublist > .subitem:not(.disabled)");
                $products.each(function (productIndex) {
                    var $product = $($products[productIndex]);
                    var productStamp = $product.attr("data-stamp");
                    var productData = {};

                    productData.productName = $product.find("label.list-itemname").text();
                    productData.price = $($("input.price." + productStamp)[0]).val();
                    productData.description = $($("textarea.description." + productStamp)[0]).val();
                    productData.imageUrl = $($("input.url." + productStamp)[0]).val();
                    productData.stamp = productStamp;

                    menuData.data.push(productData);
                });

                menuArray.push(menuData);
            });

            restData.menus = menuArray;
            //console.log(restData);
            $.ajax({
                url: '/Menu/Save',
                type: "POST",
                data: { "menuData": JSON.stringify(restData) },
                success: function (result) {
                    if (result.Status) {
                        console.log(result);
                    } else {
                        console.log(result);
                    }
                },
                error: function (err) {
                    console.log(err);
                }
            });
        };

        var clearUploadedFile = function () {
            var stamp = $(this).attr("data-stamp");
            var $productLabel = $("." + stamp + ".plabel");
            var $removeLabel = $("." + stamp + ".rlabel");
            var $inputLabel = $("." + stamp + ".custom-file-label");

            $("input[type=hidden]." + stamp).val("");

            $removeLabel.addClass("d-none");
            $productLabel.removeClass("d-none");
            $productLabel.text("Product Image");
            $inputLabel.text("Choose file");
        };

        render();

    </script>
}

@section styles{
    <style>
        em:hover {
            cursor: pointer;
        }

        label.section-name {
            width: 80%
        }

        .section-icon {
            color: #FF5733;
            font-size: 40px;
            /*margin-top: 10px;*/
            /*margin-right: 5px;*/
        }

        .ph-sub-class {
            background-color: #EAEAEA;
            margin: 20px;
        }

        .ph-class {
            background-color: #EAEAEA;
            /*margin: 20px;*/
        }

        .section-header-bottomline {
            line-height: 40px;
            border-bottom-width: 1.5px;
        }

        .item {
            /*background-color: white!important;*/
        }

        .trash-list > .item {
            color: white !important;
        }

        .sublist {
            /*margin-left: 20px;*/
        }

        .subitem {
            /*font-size: 11px;*/
            margin: 20px;
            /*border-bottom-style:solid;
            border-bottom-width:1px;
            border-bottom-color:#EAEAEA;*/
        }

    </style>
}